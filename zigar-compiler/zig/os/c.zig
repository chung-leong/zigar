const std = @import("std");

pub const target = std.c;

pub fn with(comptime substitutes: anytype) type {
	return struct {
		pub const tokenizer = if (@hasDecl(substitutes, "tokenizer")) substitutes.tokenizer else if (@hasDecl(std.c, "tokenizer")) std.c.tokenizer else null;
		pub const Token = if (@hasDecl(substitutes, "Token")) substitutes.Token else if (@hasDecl(std.c, "Token")) std.c.Token else null;
		pub const Tokenizer = if (@hasDecl(substitutes, "Tokenizer")) substitutes.Tokenizer else if (@hasDecl(std.c, "Tokenizer")) std.c.Tokenizer else null;
		pub const versionCheck = if (@hasDecl(substitutes, "versionCheck")) substitutes.versionCheck else if (@hasDecl(std.c, "versionCheck")) std.c.versionCheck else null;
		pub const AF = if (@hasDecl(substitutes, "AF")) substitutes.AF else if (@hasDecl(std.c, "AF")) std.c.AF else null;
		pub const ARCH = if (@hasDecl(substitutes, "ARCH")) substitutes.ARCH else if (@hasDecl(std.c, "ARCH")) std.c.ARCH else null;
		pub const AT = if (@hasDecl(substitutes, "AT")) substitutes.AT else if (@hasDecl(std.c, "AT")) std.c.AT else null;
		pub const CLOCK = if (@hasDecl(substitutes, "CLOCK")) substitutes.CLOCK else if (@hasDecl(std.c, "CLOCK")) std.c.CLOCK else null;
		pub const CPU_COUNT = if (@hasDecl(substitutes, "CPU_COUNT")) substitutes.CPU_COUNT else if (@hasDecl(std.c, "CPU_COUNT")) std.c.CPU_COUNT else null;
		pub const E = if (@hasDecl(substitutes, "E")) substitutes.E else if (@hasDecl(std.c, "E")) std.c.E else null;
		pub const Elf_Symndx = if (@hasDecl(substitutes, "Elf_Symndx")) substitutes.Elf_Symndx else if (@hasDecl(std.c, "Elf_Symndx")) std.c.Elf_Symndx else null;
		pub const F = if (@hasDecl(substitutes, "F")) substitutes.F else if (@hasDecl(std.c, "F")) std.c.F else null;
		pub const FD_CLOEXEC = if (@hasDecl(substitutes, "FD_CLOEXEC")) substitutes.FD_CLOEXEC else if (@hasDecl(std.c, "FD_CLOEXEC")) std.c.FD_CLOEXEC else null;
		pub const F_OK = if (@hasDecl(substitutes, "F_OK")) substitutes.F_OK else if (@hasDecl(std.c, "F_OK")) std.c.F_OK else null;
		pub const Flock = if (@hasDecl(substitutes, "Flock")) substitutes.Flock else if (@hasDecl(std.c, "Flock")) std.c.Flock else null;
		pub const HOST_NAME_MAX = if (@hasDecl(substitutes, "HOST_NAME_MAX")) substitutes.HOST_NAME_MAX else if (@hasDecl(std.c, "HOST_NAME_MAX")) std.c.HOST_NAME_MAX else null;
		pub const IFNAMESIZE = if (@hasDecl(substitutes, "IFNAMESIZE")) substitutes.IFNAMESIZE else if (@hasDecl(std.c, "IFNAMESIZE")) std.c.IFNAMESIZE else null;
		pub const IOV_MAX = if (@hasDecl(substitutes, "IOV_MAX")) substitutes.IOV_MAX else if (@hasDecl(std.c, "IOV_MAX")) std.c.IOV_MAX else null;
		pub const IPPROTO = if (@hasDecl(substitutes, "IPPROTO")) substitutes.IPPROTO else if (@hasDecl(std.c, "IPPROTO")) std.c.IPPROTO else null;
		pub const LOCK = if (@hasDecl(substitutes, "LOCK")) substitutes.LOCK else if (@hasDecl(std.c, "LOCK")) std.c.LOCK else null;
		pub const MADV = if (@hasDecl(substitutes, "MADV")) substitutes.MADV else if (@hasDecl(std.c, "MADV")) std.c.MADV else null;
		pub const MAP = if (@hasDecl(substitutes, "MAP")) substitutes.MAP else if (@hasDecl(std.c, "MAP")) std.c.MAP else null;
		pub const MSF = if (@hasDecl(substitutes, "MSF")) substitutes.MSF else if (@hasDecl(std.c, "MSF")) std.c.MSF else null;
		pub const MMAP2_UNIT = if (@hasDecl(substitutes, "MMAP2_UNIT")) substitutes.MMAP2_UNIT else if (@hasDecl(std.c, "MMAP2_UNIT")) std.c.MMAP2_UNIT else null;
		pub const MSG = if (@hasDecl(substitutes, "MSG")) substitutes.MSG else if (@hasDecl(std.c, "MSG")) std.c.MSG else null;
		pub const NAME_MAX = if (@hasDecl(substitutes, "NAME_MAX")) substitutes.NAME_MAX else if (@hasDecl(std.c, "NAME_MAX")) std.c.NAME_MAX else null;
		pub const O = if (@hasDecl(substitutes, "O")) substitutes.O else if (@hasDecl(std.c, "O")) std.c.O else null;
		pub const PATH_MAX = if (@hasDecl(substitutes, "PATH_MAX")) substitutes.PATH_MAX else if (@hasDecl(std.c, "PATH_MAX")) std.c.PATH_MAX else null;
		pub const POLL = if (@hasDecl(substitutes, "POLL")) substitutes.POLL else if (@hasDecl(std.c, "POLL")) std.c.POLL else null;
		pub const PROT = if (@hasDecl(substitutes, "PROT")) substitutes.PROT else if (@hasDecl(std.c, "PROT")) std.c.PROT else null;
		pub const REG = if (@hasDecl(substitutes, "REG")) substitutes.REG else if (@hasDecl(std.c, "REG")) std.c.REG else null;
		pub const RLIM = if (@hasDecl(substitutes, "RLIM")) substitutes.RLIM else if (@hasDecl(std.c, "RLIM")) std.c.RLIM else null;
		pub const R_OK = if (@hasDecl(substitutes, "R_OK")) substitutes.R_OK else if (@hasDecl(std.c, "R_OK")) std.c.R_OK else null;
		pub const S = if (@hasDecl(substitutes, "S")) substitutes.S else if (@hasDecl(std.c, "S")) std.c.S else null;
		pub const SA = if (@hasDecl(substitutes, "SA")) substitutes.SA else if (@hasDecl(std.c, "SA")) std.c.SA else null;
		pub const SC = if (@hasDecl(substitutes, "SC")) substitutes.SC else if (@hasDecl(std.c, "SC")) std.c.SC else null;
		pub const SEEK = if (@hasDecl(substitutes, "SEEK")) substitutes.SEEK else if (@hasDecl(std.c, "SEEK")) std.c.SEEK else null;
		pub const SHUT = if (@hasDecl(substitutes, "SHUT")) substitutes.SHUT else if (@hasDecl(std.c, "SHUT")) std.c.SHUT else null;
		pub const SIG = if (@hasDecl(substitutes, "SIG")) substitutes.SIG else if (@hasDecl(std.c, "SIG")) std.c.SIG else null;
		pub const SIOCGIFINDEX = if (@hasDecl(substitutes, "SIOCGIFINDEX")) substitutes.SIOCGIFINDEX else if (@hasDecl(std.c, "SIOCGIFINDEX")) std.c.SIOCGIFINDEX else null;
		pub const SO = if (@hasDecl(substitutes, "SO")) substitutes.SO else if (@hasDecl(std.c, "SO")) std.c.SO else null;
		pub const SOCK = if (@hasDecl(substitutes, "SOCK")) substitutes.SOCK else if (@hasDecl(std.c, "SOCK")) std.c.SOCK else null;
		pub const SOL = if (@hasDecl(substitutes, "SOL")) substitutes.SOL else if (@hasDecl(std.c, "SOL")) std.c.SOL else null;
		pub const STDERR_FILENO = if (@hasDecl(substitutes, "STDERR_FILENO")) substitutes.STDERR_FILENO else if (@hasDecl(std.c, "STDERR_FILENO")) std.c.STDERR_FILENO else null;
		pub const STDIN_FILENO = if (@hasDecl(substitutes, "STDIN_FILENO")) substitutes.STDIN_FILENO else if (@hasDecl(std.c, "STDIN_FILENO")) std.c.STDIN_FILENO else null;
		pub const STDOUT_FILENO = if (@hasDecl(substitutes, "STDOUT_FILENO")) substitutes.STDOUT_FILENO else if (@hasDecl(std.c, "STDOUT_FILENO")) std.c.STDOUT_FILENO else null;
		pub const SYS = if (@hasDecl(substitutes, "SYS")) substitutes.SYS else if (@hasDecl(std.c, "SYS")) std.c.SYS else null;
		pub const Sigaction = if (@hasDecl(substitutes, "Sigaction")) substitutes.Sigaction else if (@hasDecl(std.c, "Sigaction")) std.c.Sigaction else null;
		pub const TCP = if (@hasDecl(substitutes, "TCP")) substitutes.TCP else if (@hasDecl(std.c, "TCP")) std.c.TCP else null;
		pub const TCSA = if (@hasDecl(substitutes, "TCSA")) substitutes.TCSA else if (@hasDecl(std.c, "TCSA")) std.c.TCSA else null;
		pub const VDSO = if (@hasDecl(substitutes, "VDSO")) substitutes.VDSO else if (@hasDecl(std.c, "VDSO")) std.c.VDSO else null;
		pub const W = if (@hasDecl(substitutes, "W")) substitutes.W else if (@hasDecl(std.c, "W")) std.c.W else null;
		pub const W_OK = if (@hasDecl(substitutes, "W_OK")) substitutes.W_OK else if (@hasDecl(std.c, "W_OK")) std.c.W_OK else null;
		pub const X_OK = if (@hasDecl(substitutes, "X_OK")) substitutes.X_OK else if (@hasDecl(std.c, "X_OK")) std.c.X_OK else null;
		pub const addrinfo = if (@hasDecl(substitutes, "addrinfo")) substitutes.addrinfo else if (@hasDecl(std.c, "addrinfo")) std.c.addrinfo else null;
		pub const blkcnt_t = if (@hasDecl(substitutes, "blkcnt_t")) substitutes.blkcnt_t else if (@hasDecl(std.c, "blkcnt_t")) std.c.blkcnt_t else null;
		pub const blksize_t = if (@hasDecl(substitutes, "blksize_t")) substitutes.blksize_t else if (@hasDecl(std.c, "blksize_t")) std.c.blksize_t else null;
		pub const clock_t = if (@hasDecl(substitutes, "clock_t")) substitutes.clock_t else if (@hasDecl(std.c, "clock_t")) std.c.clock_t else null;
		pub const cpu_set_t = if (@hasDecl(substitutes, "cpu_set_t")) substitutes.cpu_set_t else if (@hasDecl(std.c, "cpu_set_t")) std.c.cpu_set_t else null;
		pub const dev_t = if (@hasDecl(substitutes, "dev_t")) substitutes.dev_t else if (@hasDecl(std.c, "dev_t")) std.c.dev_t else null;
		pub const dl_phdr_info = if (@hasDecl(substitutes, "dl_phdr_info")) substitutes.dl_phdr_info else if (@hasDecl(std.c, "dl_phdr_info")) std.c.dl_phdr_info else null;
		pub const empty_sigset = if (@hasDecl(substitutes, "empty_sigset")) substitutes.empty_sigset else if (@hasDecl(std.c, "empty_sigset")) std.c.empty_sigset else null;
		pub const epoll_event = if (@hasDecl(substitutes, "epoll_event")) substitutes.epoll_event else if (@hasDecl(std.c, "epoll_event")) std.c.epoll_event else null;
		pub const fd_t = if (@hasDecl(substitutes, "fd_t")) substitutes.fd_t else if (@hasDecl(std.c, "fd_t")) std.c.fd_t else null;
		pub const gid_t = if (@hasDecl(substitutes, "gid_t")) substitutes.gid_t else if (@hasDecl(std.c, "gid_t")) std.c.gid_t else null;
		pub const ifreq = if (@hasDecl(substitutes, "ifreq")) substitutes.ifreq else if (@hasDecl(std.c, "ifreq")) std.c.ifreq else null;
		pub const ino_t = if (@hasDecl(substitutes, "ino_t")) substitutes.ino_t else if (@hasDecl(std.c, "ino_t")) std.c.ino_t else null;
		pub const mcontext_t = if (@hasDecl(substitutes, "mcontext_t")) substitutes.mcontext_t else if (@hasDecl(std.c, "mcontext_t")) std.c.mcontext_t else null;
		pub const mode_t = if (@hasDecl(substitutes, "mode_t")) substitutes.mode_t else if (@hasDecl(std.c, "mode_t")) std.c.mode_t else null;
		pub const msghdr = if (@hasDecl(substitutes, "msghdr")) substitutes.msghdr else if (@hasDecl(std.c, "msghdr")) std.c.msghdr else null;
		pub const msghdr_const = if (@hasDecl(substitutes, "msghdr_const")) substitutes.msghdr_const else if (@hasDecl(std.c, "msghdr_const")) std.c.msghdr_const else null;
		pub const nfds_t = if (@hasDecl(substitutes, "nfds_t")) substitutes.nfds_t else if (@hasDecl(std.c, "nfds_t")) std.c.nfds_t else null;
		pub const nlink_t = if (@hasDecl(substitutes, "nlink_t")) substitutes.nlink_t else if (@hasDecl(std.c, "nlink_t")) std.c.nlink_t else null;
		pub const off_t = if (@hasDecl(substitutes, "off_t")) substitutes.off_t else if (@hasDecl(std.c, "off_t")) std.c.off_t else null;
		pub const pid_t = if (@hasDecl(substitutes, "pid_t")) substitutes.pid_t else if (@hasDecl(std.c, "pid_t")) std.c.pid_t else null;
		pub const pollfd = if (@hasDecl(substitutes, "pollfd")) substitutes.pollfd else if (@hasDecl(std.c, "pollfd")) std.c.pollfd else null;
		pub const rlim_t = if (@hasDecl(substitutes, "rlim_t")) substitutes.rlim_t else if (@hasDecl(std.c, "rlim_t")) std.c.rlim_t else null;
		pub const rlimit = if (@hasDecl(substitutes, "rlimit")) substitutes.rlimit else if (@hasDecl(std.c, "rlimit")) std.c.rlimit else null;
		pub const rlimit_resource = if (@hasDecl(substitutes, "rlimit_resource")) substitutes.rlimit_resource else if (@hasDecl(std.c, "rlimit_resource")) std.c.rlimit_resource else null;
		pub const rusage = if (@hasDecl(substitutes, "rusage")) substitutes.rusage else if (@hasDecl(std.c, "rusage")) std.c.rusage else null;
		pub const siginfo_t = if (@hasDecl(substitutes, "siginfo_t")) substitutes.siginfo_t else if (@hasDecl(std.c, "siginfo_t")) std.c.siginfo_t else null;
		pub const sigset_t = if (@hasDecl(substitutes, "sigset_t")) substitutes.sigset_t else if (@hasDecl(std.c, "sigset_t")) std.c.sigset_t else null;
		pub const sockaddr = if (@hasDecl(substitutes, "sockaddr")) substitutes.sockaddr else if (@hasDecl(std.c, "sockaddr")) std.c.sockaddr else null;
		pub const socklen_t = if (@hasDecl(substitutes, "socklen_t")) substitutes.socklen_t else if (@hasDecl(std.c, "socklen_t")) std.c.socklen_t else null;
		pub const stack_t = if (@hasDecl(substitutes, "stack_t")) substitutes.stack_t else if (@hasDecl(std.c, "stack_t")) std.c.stack_t else null;
		pub const tcflag_t = if (@hasDecl(substitutes, "tcflag_t")) substitutes.tcflag_t else if (@hasDecl(std.c, "tcflag_t")) std.c.tcflag_t else null;
		pub const termios = if (@hasDecl(substitutes, "termios")) substitutes.termios else if (@hasDecl(std.c, "termios")) std.c.termios else null;
		pub const time_t = if (@hasDecl(substitutes, "time_t")) substitutes.time_t else if (@hasDecl(std.c, "time_t")) std.c.time_t else null;
		pub const timespec = if (@hasDecl(substitutes, "timespec")) substitutes.timespec else if (@hasDecl(std.c, "timespec")) std.c.timespec else null;
		pub const timeval = if (@hasDecl(substitutes, "timeval")) substitutes.timeval else if (@hasDecl(std.c, "timeval")) std.c.timeval else null;
		pub const timezone = if (@hasDecl(substitutes, "timezone")) substitutes.timezone else if (@hasDecl(std.c, "timezone")) std.c.timezone else null;
		pub const ucontext_t = if (@hasDecl(substitutes, "ucontext_t")) substitutes.ucontext_t else if (@hasDecl(std.c, "ucontext_t")) std.c.ucontext_t else null;
		pub const uid_t = if (@hasDecl(substitutes, "uid_t")) substitutes.uid_t else if (@hasDecl(std.c, "uid_t")) std.c.uid_t else null;
		pub const user_desc = if (@hasDecl(substitutes, "user_desc")) substitutes.user_desc else if (@hasDecl(std.c, "user_desc")) std.c.user_desc else null;
		pub const utsname = if (@hasDecl(substitutes, "utsname")) substitutes.utsname else if (@hasDecl(std.c, "utsname")) std.c.utsname else null;
		pub const PR = if (@hasDecl(substitutes, "PR")) substitutes.PR else if (@hasDecl(std.c, "PR")) std.c.PR else null;
		pub const _errno = if (@hasDecl(substitutes, "_errno")) substitutes._errno else if (@hasDecl(std.c, "_errno")) std.c._errno else null;
		pub const Stat = if (@hasDecl(substitutes, "Stat")) substitutes.Stat else if (@hasDecl(std.c, "Stat")) std.c.Stat else null;
		pub const AI = if (@hasDecl(substitutes, "AI")) substitutes.AI else if (@hasDecl(std.c, "AI")) std.c.AI else null;
		pub const NI = if (@hasDecl(substitutes, "NI")) substitutes.NI else if (@hasDecl(std.c, "NI")) std.c.NI else null;
		pub const EAI = if (@hasDecl(substitutes, "EAI")) substitutes.EAI else if (@hasDecl(std.c, "EAI")) std.c.EAI else null;
		pub const fallocate64 = if (@hasDecl(substitutes, "fallocate64")) substitutes.fallocate64 else if (@hasDecl(std.c, "fallocate64")) std.c.fallocate64 else null;
		pub const fopen64 = if (@hasDecl(substitutes, "fopen64")) substitutes.fopen64 else if (@hasDecl(std.c, "fopen64")) std.c.fopen64 else null;
		pub const fstat64 = if (@hasDecl(substitutes, "fstat64")) substitutes.fstat64 else if (@hasDecl(std.c, "fstat64")) std.c.fstat64 else null;
		pub const fstatat64 = if (@hasDecl(substitutes, "fstatat64")) substitutes.fstatat64 else if (@hasDecl(std.c, "fstatat64")) std.c.fstatat64 else null;
		pub const ftruncate64 = if (@hasDecl(substitutes, "ftruncate64")) substitutes.ftruncate64 else if (@hasDecl(std.c, "ftruncate64")) std.c.ftruncate64 else null;
		pub const getrlimit64 = if (@hasDecl(substitutes, "getrlimit64")) substitutes.getrlimit64 else if (@hasDecl(std.c, "getrlimit64")) std.c.getrlimit64 else null;
		pub const lseek64 = if (@hasDecl(substitutes, "lseek64")) substitutes.lseek64 else if (@hasDecl(std.c, "lseek64")) std.c.lseek64 else null;
		pub const mmap64 = if (@hasDecl(substitutes, "mmap64")) substitutes.mmap64 else if (@hasDecl(std.c, "mmap64")) std.c.mmap64 else null;
		pub const open64 = if (@hasDecl(substitutes, "open64")) substitutes.open64 else if (@hasDecl(std.c, "open64")) std.c.open64 else null;
		pub const openat64 = if (@hasDecl(substitutes, "openat64")) substitutes.openat64 else if (@hasDecl(std.c, "openat64")) std.c.openat64 else null;
		pub const pread64 = if (@hasDecl(substitutes, "pread64")) substitutes.pread64 else if (@hasDecl(std.c, "pread64")) std.c.pread64 else null;
		pub const preadv64 = if (@hasDecl(substitutes, "preadv64")) substitutes.preadv64 else if (@hasDecl(std.c, "preadv64")) std.c.preadv64 else null;
		pub const pwrite64 = if (@hasDecl(substitutes, "pwrite64")) substitutes.pwrite64 else if (@hasDecl(std.c, "pwrite64")) std.c.pwrite64 else null;
		pub const pwritev64 = if (@hasDecl(substitutes, "pwritev64")) substitutes.pwritev64 else if (@hasDecl(std.c, "pwritev64")) std.c.pwritev64 else null;
		pub const sendfile64 = if (@hasDecl(substitutes, "sendfile64")) substitutes.sendfile64 else if (@hasDecl(std.c, "sendfile64")) std.c.sendfile64 else null;
		pub const setrlimit64 = if (@hasDecl(substitutes, "setrlimit64")) substitutes.setrlimit64 else if (@hasDecl(std.c, "setrlimit64")) std.c.setrlimit64 else null;
		pub const getrandom = if (@hasDecl(substitutes, "getrandom")) substitutes.getrandom else if (@hasDecl(std.c, "getrandom")) std.c.getrandom else null;
		pub const sched_getaffinity = if (@hasDecl(substitutes, "sched_getaffinity")) substitutes.sched_getaffinity else if (@hasDecl(std.c, "sched_getaffinity")) std.c.sched_getaffinity else null;
		pub const eventfd = if (@hasDecl(substitutes, "eventfd")) substitutes.eventfd else if (@hasDecl(std.c, "eventfd")) std.c.eventfd else null;
		pub const epoll_ctl = if (@hasDecl(substitutes, "epoll_ctl")) substitutes.epoll_ctl else if (@hasDecl(std.c, "epoll_ctl")) std.c.epoll_ctl else null;
		pub const epoll_create1 = if (@hasDecl(substitutes, "epoll_create1")) substitutes.epoll_create1 else if (@hasDecl(std.c, "epoll_create1")) std.c.epoll_create1 else null;
		pub const epoll_wait = if (@hasDecl(substitutes, "epoll_wait")) substitutes.epoll_wait else if (@hasDecl(std.c, "epoll_wait")) std.c.epoll_wait else null;
		pub const epoll_pwait = if (@hasDecl(substitutes, "epoll_pwait")) substitutes.epoll_pwait else if (@hasDecl(std.c, "epoll_pwait")) std.c.epoll_pwait else null;
		pub const inotify_init1 = if (@hasDecl(substitutes, "inotify_init1")) substitutes.inotify_init1 else if (@hasDecl(std.c, "inotify_init1")) std.c.inotify_init1 else null;
		pub const inotify_add_watch = if (@hasDecl(substitutes, "inotify_add_watch")) substitutes.inotify_add_watch else if (@hasDecl(std.c, "inotify_add_watch")) std.c.inotify_add_watch else null;
		pub const inotify_rm_watch = if (@hasDecl(substitutes, "inotify_rm_watch")) substitutes.inotify_rm_watch else if (@hasDecl(std.c, "inotify_rm_watch")) std.c.inotify_rm_watch else null;
		pub const getauxval = if (@hasDecl(substitutes, "getauxval")) substitutes.getauxval else if (@hasDecl(std.c, "getauxval")) std.c.getauxval else null;
		pub const dl_iterate_phdr_callback = if (@hasDecl(substitutes, "dl_iterate_phdr_callback")) substitutes.dl_iterate_phdr_callback else if (@hasDecl(std.c, "dl_iterate_phdr_callback")) std.c.dl_iterate_phdr_callback else null;
		pub const dl_iterate_phdr = if (@hasDecl(substitutes, "dl_iterate_phdr")) substitutes.dl_iterate_phdr else if (@hasDecl(std.c, "dl_iterate_phdr")) std.c.dl_iterate_phdr else null;
		pub const sigaltstack = if (@hasDecl(substitutes, "sigaltstack")) substitutes.sigaltstack else if (@hasDecl(std.c, "sigaltstack")) std.c.sigaltstack else null;
		pub const memfd_create = if (@hasDecl(substitutes, "memfd_create")) substitutes.memfd_create else if (@hasDecl(std.c, "memfd_create")) std.c.memfd_create else null;
		pub const pipe2 = if (@hasDecl(substitutes, "pipe2")) substitutes.pipe2 else if (@hasDecl(std.c, "pipe2")) std.c.pipe2 else null;
		pub const fallocate = if (@hasDecl(substitutes, "fallocate")) substitutes.fallocate else if (@hasDecl(std.c, "fallocate")) std.c.fallocate else null;
		pub const sendfile = if (@hasDecl(substitutes, "sendfile")) substitutes.sendfile else if (@hasDecl(std.c, "sendfile")) std.c.sendfile else null;
		pub const copy_file_range = if (@hasDecl(substitutes, "copy_file_range")) substitutes.copy_file_range else if (@hasDecl(std.c, "copy_file_range")) std.c.copy_file_range else null;
		pub const signalfd = if (@hasDecl(substitutes, "signalfd")) substitutes.signalfd else if (@hasDecl(std.c, "signalfd")) std.c.signalfd else null;
		pub const prlimit = if (@hasDecl(substitutes, "prlimit")) substitutes.prlimit else if (@hasDecl(std.c, "prlimit")) std.c.prlimit else null;
		pub const posix_memalign = if (@hasDecl(substitutes, "posix_memalign")) substitutes.posix_memalign else if (@hasDecl(std.c, "posix_memalign")) std.c.posix_memalign else null;
		pub const malloc_usable_size = if (@hasDecl(substitutes, "malloc_usable_size")) substitutes.malloc_usable_size else if (@hasDecl(std.c, "malloc_usable_size")) std.c.malloc_usable_size else null;
		pub const mincore = if (@hasDecl(substitutes, "mincore")) substitutes.mincore else if (@hasDecl(std.c, "mincore")) std.c.mincore else null;
		pub const madvise = if (@hasDecl(substitutes, "madvise")) substitutes.madvise else if (@hasDecl(std.c, "madvise")) std.c.madvise else null;
		pub const pthread_attr_t = if (@hasDecl(substitutes, "pthread_attr_t")) substitutes.pthread_attr_t else if (@hasDecl(std.c, "pthread_attr_t")) std.c.pthread_attr_t else null;
		pub const pthread_mutex_t = if (@hasDecl(substitutes, "pthread_mutex_t")) substitutes.pthread_mutex_t else if (@hasDecl(std.c, "pthread_mutex_t")) std.c.pthread_mutex_t else null;
		pub const pthread_cond_t = if (@hasDecl(substitutes, "pthread_cond_t")) substitutes.pthread_cond_t else if (@hasDecl(std.c, "pthread_cond_t")) std.c.pthread_cond_t else null;
		pub const pthread_rwlock_t = if (@hasDecl(substitutes, "pthread_rwlock_t")) substitutes.pthread_rwlock_t else if (@hasDecl(std.c, "pthread_rwlock_t")) std.c.pthread_rwlock_t else null;
		pub const pthread_key_t = if (@hasDecl(substitutes, "pthread_key_t")) substitutes.pthread_key_t else if (@hasDecl(std.c, "pthread_key_t")) std.c.pthread_key_t else null;
		pub const sem_t = if (@hasDecl(substitutes, "sem_t")) substitutes.sem_t else if (@hasDecl(std.c, "sem_t")) std.c.sem_t else null;
		pub const pthread_setname_np = if (@hasDecl(substitutes, "pthread_setname_np")) substitutes.pthread_setname_np else if (@hasDecl(std.c, "pthread_setname_np")) std.c.pthread_setname_np else null;
		pub const pthread_getname_np = if (@hasDecl(substitutes, "pthread_getname_np")) substitutes.pthread_getname_np else if (@hasDecl(std.c, "pthread_getname_np")) std.c.pthread_getname_np else null;
		pub const RTLD = if (@hasDecl(substitutes, "RTLD")) substitutes.RTLD else if (@hasDecl(std.c, "RTLD")) std.c.RTLD else null;
		pub const dirent = if (@hasDecl(substitutes, "dirent")) substitutes.dirent else if (@hasDecl(std.c, "dirent")) std.c.dirent else null;
		pub const dirent64 = if (@hasDecl(substitutes, "dirent64")) substitutes.dirent64 else if (@hasDecl(std.c, "dirent64")) std.c.dirent64 else null;
		pub const whence_t = if (@hasDecl(substitutes, "whence_t")) substitutes.whence_t else if (@hasDecl(std.c, "whence_t")) std.c.whence_t else null;
		pub const DIR = if (@hasDecl(substitutes, "DIR")) substitutes.DIR else if (@hasDecl(std.c, "DIR")) std.c.DIR else null;
		pub const opendir = if (@hasDecl(substitutes, "opendir")) substitutes.opendir else if (@hasDecl(std.c, "opendir")) std.c.opendir else null;
		pub const fdopendir = if (@hasDecl(substitutes, "fdopendir")) substitutes.fdopendir else if (@hasDecl(std.c, "fdopendir")) std.c.fdopendir else null;
		pub const rewinddir = if (@hasDecl(substitutes, "rewinddir")) substitutes.rewinddir else if (@hasDecl(std.c, "rewinddir")) std.c.rewinddir else null;
		pub const closedir = if (@hasDecl(substitutes, "closedir")) substitutes.closedir else if (@hasDecl(std.c, "closedir")) std.c.closedir else null;
		pub const telldir = if (@hasDecl(substitutes, "telldir")) substitutes.telldir else if (@hasDecl(std.c, "telldir")) std.c.telldir else null;
		pub const seekdir = if (@hasDecl(substitutes, "seekdir")) substitutes.seekdir else if (@hasDecl(std.c, "seekdir")) std.c.seekdir else null;
		pub const clock_gettime = if (@hasDecl(substitutes, "clock_gettime")) substitutes.clock_gettime else if (@hasDecl(std.c, "clock_gettime")) std.c.clock_gettime else null;
		pub const clock_getres = if (@hasDecl(substitutes, "clock_getres")) substitutes.clock_getres else if (@hasDecl(std.c, "clock_getres")) std.c.clock_getres else null;
		pub const gettimeofday = if (@hasDecl(substitutes, "gettimeofday")) substitutes.gettimeofday else if (@hasDecl(std.c, "gettimeofday")) std.c.gettimeofday else null;
		pub const nanosleep = if (@hasDecl(substitutes, "nanosleep")) substitutes.nanosleep else if (@hasDecl(std.c, "nanosleep")) std.c.nanosleep else null;
		pub const getrusage = if (@hasDecl(substitutes, "getrusage")) substitutes.getrusage else if (@hasDecl(std.c, "getrusage")) std.c.getrusage else null;
		pub const sched_yield = if (@hasDecl(substitutes, "sched_yield")) substitutes.sched_yield else if (@hasDecl(std.c, "sched_yield")) std.c.sched_yield else null;
		pub const sigaction = if (@hasDecl(substitutes, "sigaction")) substitutes.sigaction else if (@hasDecl(std.c, "sigaction")) std.c.sigaction else null;
		pub const sigprocmask = if (@hasDecl(substitutes, "sigprocmask")) substitutes.sigprocmask else if (@hasDecl(std.c, "sigprocmask")) std.c.sigprocmask else null;
		pub const sigfillset = if (@hasDecl(substitutes, "sigfillset")) substitutes.sigfillset else if (@hasDecl(std.c, "sigfillset")) std.c.sigfillset else null;
		pub const sigwait = if (@hasDecl(substitutes, "sigwait")) substitutes.sigwait else if (@hasDecl(std.c, "sigwait")) std.c.sigwait else null;
		pub const socket = if (@hasDecl(substitutes, "socket")) substitutes.socket else if (@hasDecl(std.c, "socket")) std.c.socket else null;
		pub const stat = if (@hasDecl(substitutes, "stat")) substitutes.stat else if (@hasDecl(std.c, "stat")) std.c.stat else null;
		pub const alarm = if (@hasDecl(substitutes, "alarm")) substitutes.alarm else if (@hasDecl(std.c, "alarm")) std.c.alarm else null;
		pub const msync = if (@hasDecl(substitutes, "msync")) substitutes.msync else if (@hasDecl(std.c, "msync")) std.c.msync else null;
		pub const fstat = if (@hasDecl(substitutes, "fstat")) substitutes.fstat else if (@hasDecl(std.c, "fstat")) std.c.fstat else null;
		pub const readdir = if (@hasDecl(substitutes, "readdir")) substitutes.readdir else if (@hasDecl(std.c, "readdir")) std.c.readdir else null;
		pub const realpath = if (@hasDecl(substitutes, "realpath")) substitutes.realpath else if (@hasDecl(std.c, "realpath")) std.c.realpath else null;
		pub const fstatat = if (@hasDecl(substitutes, "fstatat")) substitutes.fstatat else if (@hasDecl(std.c, "fstatat")) std.c.fstatat else null;
		pub const getErrno = if (@hasDecl(substitutes, "getErrno")) substitutes.getErrno else if (@hasDecl(std.c, "getErrno")) std.c.getErrno else null;
		pub const environ = if (@hasDecl(substitutes, "environ")) substitutes.environ else if (@hasDecl(std.c, "environ")) std.c.environ else null;
		pub const fopen = if (@hasDecl(substitutes, "fopen")) substitutes.fopen else if (@hasDecl(std.c, "fopen")) std.c.fopen else null;
		pub const fclose = if (@hasDecl(substitutes, "fclose")) substitutes.fclose else if (@hasDecl(std.c, "fclose")) std.c.fclose else null;
		pub const fwrite = if (@hasDecl(substitutes, "fwrite")) substitutes.fwrite else if (@hasDecl(std.c, "fwrite")) std.c.fwrite else null;
		pub const fread = if (@hasDecl(substitutes, "fread")) substitutes.fread else if (@hasDecl(std.c, "fread")) std.c.fread else null;
		pub const printf = if (@hasDecl(substitutes, "printf")) substitutes.printf else if (@hasDecl(std.c, "printf")) std.c.printf else null;
		pub const abort = if (@hasDecl(substitutes, "abort")) substitutes.abort else if (@hasDecl(std.c, "abort")) std.c.abort else null;
		pub const exit = if (@hasDecl(substitutes, "exit")) substitutes.exit else if (@hasDecl(std.c, "exit")) std.c.exit else null;
		pub const _exit = if (@hasDecl(substitutes, "_exit")) substitutes._exit else if (@hasDecl(std.c, "_exit")) std.c._exit else null;
		pub const isatty = if (@hasDecl(substitutes, "isatty")) substitutes.isatty else if (@hasDecl(std.c, "isatty")) std.c.isatty else null;
		pub const close = if (@hasDecl(substitutes, "close")) substitutes.close else if (@hasDecl(std.c, "close")) std.c.close else null;
		pub const lseek = if (@hasDecl(substitutes, "lseek")) substitutes.lseek else if (@hasDecl(std.c, "lseek")) std.c.lseek else null;
		pub const open = if (@hasDecl(substitutes, "open")) substitutes.open else if (@hasDecl(std.c, "open")) std.c.open else null;
		pub const openat = if (@hasDecl(substitutes, "openat")) substitutes.openat else if (@hasDecl(std.c, "openat")) std.c.openat else null;
		pub const ftruncate = if (@hasDecl(substitutes, "ftruncate")) substitutes.ftruncate else if (@hasDecl(std.c, "ftruncate")) std.c.ftruncate else null;
		pub const raise = if (@hasDecl(substitutes, "raise")) substitutes.raise else if (@hasDecl(std.c, "raise")) std.c.raise else null;
		pub const read = if (@hasDecl(substitutes, "read")) substitutes.read else if (@hasDecl(std.c, "read")) std.c.read else null;
		pub const readv = if (@hasDecl(substitutes, "readv")) substitutes.readv else if (@hasDecl(std.c, "readv")) std.c.readv else null;
		pub const pread = if (@hasDecl(substitutes, "pread")) substitutes.pread else if (@hasDecl(std.c, "pread")) std.c.pread else null;
		pub const preadv = if (@hasDecl(substitutes, "preadv")) substitutes.preadv else if (@hasDecl(std.c, "preadv")) std.c.preadv else null;
		pub const writev = if (@hasDecl(substitutes, "writev")) substitutes.writev else if (@hasDecl(std.c, "writev")) std.c.writev else null;
		pub const pwritev = if (@hasDecl(substitutes, "pwritev")) substitutes.pwritev else if (@hasDecl(std.c, "pwritev")) std.c.pwritev else null;
		pub const write = if (@hasDecl(substitutes, "write")) substitutes.write else if (@hasDecl(std.c, "write")) std.c.write else null;
		pub const pwrite = if (@hasDecl(substitutes, "pwrite")) substitutes.pwrite else if (@hasDecl(std.c, "pwrite")) std.c.pwrite else null;
		pub const mmap = if (@hasDecl(substitutes, "mmap")) substitutes.mmap else if (@hasDecl(std.c, "mmap")) std.c.mmap else null;
		pub const munmap = if (@hasDecl(substitutes, "munmap")) substitutes.munmap else if (@hasDecl(std.c, "munmap")) std.c.munmap else null;
		pub const mprotect = if (@hasDecl(substitutes, "mprotect")) substitutes.mprotect else if (@hasDecl(std.c, "mprotect")) std.c.mprotect else null;
		pub const link = if (@hasDecl(substitutes, "link")) substitutes.link else if (@hasDecl(std.c, "link")) std.c.link else null;
		pub const linkat = if (@hasDecl(substitutes, "linkat")) substitutes.linkat else if (@hasDecl(std.c, "linkat")) std.c.linkat else null;
		pub const unlink = if (@hasDecl(substitutes, "unlink")) substitutes.unlink else if (@hasDecl(std.c, "unlink")) std.c.unlink else null;
		pub const unlinkat = if (@hasDecl(substitutes, "unlinkat")) substitutes.unlinkat else if (@hasDecl(std.c, "unlinkat")) std.c.unlinkat else null;
		pub const getcwd = if (@hasDecl(substitutes, "getcwd")) substitutes.getcwd else if (@hasDecl(std.c, "getcwd")) std.c.getcwd else null;
		pub const waitpid = if (@hasDecl(substitutes, "waitpid")) substitutes.waitpid else if (@hasDecl(std.c, "waitpid")) std.c.waitpid else null;
		pub const wait4 = if (@hasDecl(substitutes, "wait4")) substitutes.wait4 else if (@hasDecl(std.c, "wait4")) std.c.wait4 else null;
		pub const fork = if (@hasDecl(substitutes, "fork")) substitutes.fork else if (@hasDecl(std.c, "fork")) std.c.fork else null;
		pub const access = if (@hasDecl(substitutes, "access")) substitutes.access else if (@hasDecl(std.c, "access")) std.c.access else null;
		pub const faccessat = if (@hasDecl(substitutes, "faccessat")) substitutes.faccessat else if (@hasDecl(std.c, "faccessat")) std.c.faccessat else null;
		pub const pipe = if (@hasDecl(substitutes, "pipe")) substitutes.pipe else if (@hasDecl(std.c, "pipe")) std.c.pipe else null;
		pub const mkdir = if (@hasDecl(substitutes, "mkdir")) substitutes.mkdir else if (@hasDecl(std.c, "mkdir")) std.c.mkdir else null;
		pub const mkdirat = if (@hasDecl(substitutes, "mkdirat")) substitutes.mkdirat else if (@hasDecl(std.c, "mkdirat")) std.c.mkdirat else null;
		pub const symlink = if (@hasDecl(substitutes, "symlink")) substitutes.symlink else if (@hasDecl(std.c, "symlink")) std.c.symlink else null;
		pub const symlinkat = if (@hasDecl(substitutes, "symlinkat")) substitutes.symlinkat else if (@hasDecl(std.c, "symlinkat")) std.c.symlinkat else null;
		pub const rename = if (@hasDecl(substitutes, "rename")) substitutes.rename else if (@hasDecl(std.c, "rename")) std.c.rename else null;
		pub const renameat = if (@hasDecl(substitutes, "renameat")) substitutes.renameat else if (@hasDecl(std.c, "renameat")) std.c.renameat else null;
		pub const chdir = if (@hasDecl(substitutes, "chdir")) substitutes.chdir else if (@hasDecl(std.c, "chdir")) std.c.chdir else null;
		pub const fchdir = if (@hasDecl(substitutes, "fchdir")) substitutes.fchdir else if (@hasDecl(std.c, "fchdir")) std.c.fchdir else null;
		pub const execve = if (@hasDecl(substitutes, "execve")) substitutes.execve else if (@hasDecl(std.c, "execve")) std.c.execve else null;
		pub const dup = if (@hasDecl(substitutes, "dup")) substitutes.dup else if (@hasDecl(std.c, "dup")) std.c.dup else null;
		pub const dup2 = if (@hasDecl(substitutes, "dup2")) substitutes.dup2 else if (@hasDecl(std.c, "dup2")) std.c.dup2 else null;
		pub const readlink = if (@hasDecl(substitutes, "readlink")) substitutes.readlink else if (@hasDecl(std.c, "readlink")) std.c.readlink else null;
		pub const readlinkat = if (@hasDecl(substitutes, "readlinkat")) substitutes.readlinkat else if (@hasDecl(std.c, "readlinkat")) std.c.readlinkat else null;
		pub const chmod = if (@hasDecl(substitutes, "chmod")) substitutes.chmod else if (@hasDecl(std.c, "chmod")) std.c.chmod else null;
		pub const fchmod = if (@hasDecl(substitutes, "fchmod")) substitutes.fchmod else if (@hasDecl(std.c, "fchmod")) std.c.fchmod else null;
		pub const fchmodat = if (@hasDecl(substitutes, "fchmodat")) substitutes.fchmodat else if (@hasDecl(std.c, "fchmodat")) std.c.fchmodat else null;
		pub const fchown = if (@hasDecl(substitutes, "fchown")) substitutes.fchown else if (@hasDecl(std.c, "fchown")) std.c.fchown else null;
		pub const umask = if (@hasDecl(substitutes, "umask")) substitutes.umask else if (@hasDecl(std.c, "umask")) std.c.umask else null;
		pub const rmdir = if (@hasDecl(substitutes, "rmdir")) substitutes.rmdir else if (@hasDecl(std.c, "rmdir")) std.c.rmdir else null;
		pub const getenv = if (@hasDecl(substitutes, "getenv")) substitutes.getenv else if (@hasDecl(std.c, "getenv")) std.c.getenv else null;
		pub const sysctl = if (@hasDecl(substitutes, "sysctl")) substitutes.sysctl else if (@hasDecl(std.c, "sysctl")) std.c.sysctl else null;
		pub const sysctlbyname = if (@hasDecl(substitutes, "sysctlbyname")) substitutes.sysctlbyname else if (@hasDecl(std.c, "sysctlbyname")) std.c.sysctlbyname else null;
		pub const sysctlnametomib = if (@hasDecl(substitutes, "sysctlnametomib")) substitutes.sysctlnametomib else if (@hasDecl(std.c, "sysctlnametomib")) std.c.sysctlnametomib else null;
		pub const tcgetattr = if (@hasDecl(substitutes, "tcgetattr")) substitutes.tcgetattr else if (@hasDecl(std.c, "tcgetattr")) std.c.tcgetattr else null;
		pub const tcsetattr = if (@hasDecl(substitutes, "tcsetattr")) substitutes.tcsetattr else if (@hasDecl(std.c, "tcsetattr")) std.c.tcsetattr else null;
		pub const fcntl = if (@hasDecl(substitutes, "fcntl")) substitutes.fcntl else if (@hasDecl(std.c, "fcntl")) std.c.fcntl else null;
		pub const flock = if (@hasDecl(substitutes, "flock")) substitutes.flock else if (@hasDecl(std.c, "flock")) std.c.flock else null;
		pub const ioctl = if (@hasDecl(substitutes, "ioctl")) substitutes.ioctl else if (@hasDecl(std.c, "ioctl")) std.c.ioctl else null;
		pub const uname = if (@hasDecl(substitutes, "uname")) substitutes.uname else if (@hasDecl(std.c, "uname")) std.c.uname else null;
		pub const gethostname = if (@hasDecl(substitutes, "gethostname")) substitutes.gethostname else if (@hasDecl(std.c, "gethostname")) std.c.gethostname else null;
		pub const shutdown = if (@hasDecl(substitutes, "shutdown")) substitutes.shutdown else if (@hasDecl(std.c, "shutdown")) std.c.shutdown else null;
		pub const bind = if (@hasDecl(substitutes, "bind")) substitutes.bind else if (@hasDecl(std.c, "bind")) std.c.bind else null;
		pub const socketpair = if (@hasDecl(substitutes, "socketpair")) substitutes.socketpair else if (@hasDecl(std.c, "socketpair")) std.c.socketpair else null;
		pub const listen = if (@hasDecl(substitutes, "listen")) substitutes.listen else if (@hasDecl(std.c, "listen")) std.c.listen else null;
		pub const getsockname = if (@hasDecl(substitutes, "getsockname")) substitutes.getsockname else if (@hasDecl(std.c, "getsockname")) std.c.getsockname else null;
		pub const getpeername = if (@hasDecl(substitutes, "getpeername")) substitutes.getpeername else if (@hasDecl(std.c, "getpeername")) std.c.getpeername else null;
		pub const connect = if (@hasDecl(substitutes, "connect")) substitutes.connect else if (@hasDecl(std.c, "connect")) std.c.connect else null;
		pub const accept = if (@hasDecl(substitutes, "accept")) substitutes.accept else if (@hasDecl(std.c, "accept")) std.c.accept else null;
		pub const accept4 = if (@hasDecl(substitutes, "accept4")) substitutes.accept4 else if (@hasDecl(std.c, "accept4")) std.c.accept4 else null;
		pub const getsockopt = if (@hasDecl(substitutes, "getsockopt")) substitutes.getsockopt else if (@hasDecl(std.c, "getsockopt")) std.c.getsockopt else null;
		pub const setsockopt = if (@hasDecl(substitutes, "setsockopt")) substitutes.setsockopt else if (@hasDecl(std.c, "setsockopt")) std.c.setsockopt else null;
		pub const send = if (@hasDecl(substitutes, "send")) substitutes.send else if (@hasDecl(std.c, "send")) std.c.send else null;
		pub const sendto = if (@hasDecl(substitutes, "sendto")) substitutes.sendto else if (@hasDecl(std.c, "sendto")) std.c.sendto else null;
		pub const sendmsg = if (@hasDecl(substitutes, "sendmsg")) substitutes.sendmsg else if (@hasDecl(std.c, "sendmsg")) std.c.sendmsg else null;
		pub const recv = if (@hasDecl(substitutes, "recv")) substitutes.recv else if (@hasDecl(std.c, "recv")) std.c.recv else null;
		pub const recvfrom = if (@hasDecl(substitutes, "recvfrom")) substitutes.recvfrom else if (@hasDecl(std.c, "recvfrom")) std.c.recvfrom else null;
		pub const recvmsg = if (@hasDecl(substitutes, "recvmsg")) substitutes.recvmsg else if (@hasDecl(std.c, "recvmsg")) std.c.recvmsg else null;
		pub const kill = if (@hasDecl(substitutes, "kill")) substitutes.kill else if (@hasDecl(std.c, "kill")) std.c.kill else null;
		pub const getdirentries = if (@hasDecl(substitutes, "getdirentries")) substitutes.getdirentries else if (@hasDecl(std.c, "getdirentries")) std.c.getdirentries else null;
		pub const setuid = if (@hasDecl(substitutes, "setuid")) substitutes.setuid else if (@hasDecl(std.c, "setuid")) std.c.setuid else null;
		pub const setgid = if (@hasDecl(substitutes, "setgid")) substitutes.setgid else if (@hasDecl(std.c, "setgid")) std.c.setgid else null;
		pub const seteuid = if (@hasDecl(substitutes, "seteuid")) substitutes.seteuid else if (@hasDecl(std.c, "seteuid")) std.c.seteuid else null;
		pub const setegid = if (@hasDecl(substitutes, "setegid")) substitutes.setegid else if (@hasDecl(std.c, "setegid")) std.c.setegid else null;
		pub const setreuid = if (@hasDecl(substitutes, "setreuid")) substitutes.setreuid else if (@hasDecl(std.c, "setreuid")) std.c.setreuid else null;
		pub const setregid = if (@hasDecl(substitutes, "setregid")) substitutes.setregid else if (@hasDecl(std.c, "setregid")) std.c.setregid else null;
		pub const setresuid = if (@hasDecl(substitutes, "setresuid")) substitutes.setresuid else if (@hasDecl(std.c, "setresuid")) std.c.setresuid else null;
		pub const setresgid = if (@hasDecl(substitutes, "setresgid")) substitutes.setresgid else if (@hasDecl(std.c, "setresgid")) std.c.setresgid else null;
		pub const malloc = if (@hasDecl(substitutes, "malloc")) substitutes.malloc else if (@hasDecl(std.c, "malloc")) std.c.malloc else null;
		pub const realloc = if (@hasDecl(substitutes, "realloc")) substitutes.realloc else if (@hasDecl(std.c, "realloc")) std.c.realloc else null;
		pub const free = if (@hasDecl(substitutes, "free")) substitutes.free else if (@hasDecl(std.c, "free")) std.c.free else null;
		pub const futimes = if (@hasDecl(substitutes, "futimes")) substitutes.futimes else if (@hasDecl(std.c, "futimes")) std.c.futimes else null;
		pub const utimes = if (@hasDecl(substitutes, "utimes")) substitutes.utimes else if (@hasDecl(std.c, "utimes")) std.c.utimes else null;
		pub const utimensat = if (@hasDecl(substitutes, "utimensat")) substitutes.utimensat else if (@hasDecl(std.c, "utimensat")) std.c.utimensat else null;
		pub const futimens = if (@hasDecl(substitutes, "futimens")) substitutes.futimens else if (@hasDecl(std.c, "futimens")) std.c.futimens else null;
		pub const pthread_create = if (@hasDecl(substitutes, "pthread_create")) substitutes.pthread_create else if (@hasDecl(std.c, "pthread_create")) std.c.pthread_create else null;
		pub const pthread_attr_init = if (@hasDecl(substitutes, "pthread_attr_init")) substitutes.pthread_attr_init else if (@hasDecl(std.c, "pthread_attr_init")) std.c.pthread_attr_init else null;
		pub const pthread_attr_setstack = if (@hasDecl(substitutes, "pthread_attr_setstack")) substitutes.pthread_attr_setstack else if (@hasDecl(std.c, "pthread_attr_setstack")) std.c.pthread_attr_setstack else null;
		pub const pthread_attr_setstacksize = if (@hasDecl(substitutes, "pthread_attr_setstacksize")) substitutes.pthread_attr_setstacksize else if (@hasDecl(std.c, "pthread_attr_setstacksize")) std.c.pthread_attr_setstacksize else null;
		pub const pthread_attr_setguardsize = if (@hasDecl(substitutes, "pthread_attr_setguardsize")) substitutes.pthread_attr_setguardsize else if (@hasDecl(std.c, "pthread_attr_setguardsize")) std.c.pthread_attr_setguardsize else null;
		pub const pthread_attr_destroy = if (@hasDecl(substitutes, "pthread_attr_destroy")) substitutes.pthread_attr_destroy else if (@hasDecl(std.c, "pthread_attr_destroy")) std.c.pthread_attr_destroy else null;
		pub const pthread_self = if (@hasDecl(substitutes, "pthread_self")) substitutes.pthread_self else if (@hasDecl(std.c, "pthread_self")) std.c.pthread_self else null;
		pub const pthread_join = if (@hasDecl(substitutes, "pthread_join")) substitutes.pthread_join else if (@hasDecl(std.c, "pthread_join")) std.c.pthread_join else null;
		pub const pthread_detach = if (@hasDecl(substitutes, "pthread_detach")) substitutes.pthread_detach else if (@hasDecl(std.c, "pthread_detach")) std.c.pthread_detach else null;
		pub const pthread_atfork = if (@hasDecl(substitutes, "pthread_atfork")) substitutes.pthread_atfork else if (@hasDecl(std.c, "pthread_atfork")) std.c.pthread_atfork else null;
		pub const pthread_key_create = if (@hasDecl(substitutes, "pthread_key_create")) substitutes.pthread_key_create else if (@hasDecl(std.c, "pthread_key_create")) std.c.pthread_key_create else null;
		pub const pthread_key_delete = if (@hasDecl(substitutes, "pthread_key_delete")) substitutes.pthread_key_delete else if (@hasDecl(std.c, "pthread_key_delete")) std.c.pthread_key_delete else null;
		pub const pthread_getspecific = if (@hasDecl(substitutes, "pthread_getspecific")) substitutes.pthread_getspecific else if (@hasDecl(std.c, "pthread_getspecific")) std.c.pthread_getspecific else null;
		pub const pthread_setspecific = if (@hasDecl(substitutes, "pthread_setspecific")) substitutes.pthread_setspecific else if (@hasDecl(std.c, "pthread_setspecific")) std.c.pthread_setspecific else null;
		pub const pthread_sigmask = if (@hasDecl(substitutes, "pthread_sigmask")) substitutes.pthread_sigmask else if (@hasDecl(std.c, "pthread_sigmask")) std.c.pthread_sigmask else null;
		pub const sem_init = if (@hasDecl(substitutes, "sem_init")) substitutes.sem_init else if (@hasDecl(std.c, "sem_init")) std.c.sem_init else null;
		pub const sem_destroy = if (@hasDecl(substitutes, "sem_destroy")) substitutes.sem_destroy else if (@hasDecl(std.c, "sem_destroy")) std.c.sem_destroy else null;
		pub const sem_open = if (@hasDecl(substitutes, "sem_open")) substitutes.sem_open else if (@hasDecl(std.c, "sem_open")) std.c.sem_open else null;
		pub const sem_close = if (@hasDecl(substitutes, "sem_close")) substitutes.sem_close else if (@hasDecl(std.c, "sem_close")) std.c.sem_close else null;
		pub const sem_post = if (@hasDecl(substitutes, "sem_post")) substitutes.sem_post else if (@hasDecl(std.c, "sem_post")) std.c.sem_post else null;
		pub const sem_wait = if (@hasDecl(substitutes, "sem_wait")) substitutes.sem_wait else if (@hasDecl(std.c, "sem_wait")) std.c.sem_wait else null;
		pub const sem_trywait = if (@hasDecl(substitutes, "sem_trywait")) substitutes.sem_trywait else if (@hasDecl(std.c, "sem_trywait")) std.c.sem_trywait else null;
		pub const sem_timedwait = if (@hasDecl(substitutes, "sem_timedwait")) substitutes.sem_timedwait else if (@hasDecl(std.c, "sem_timedwait")) std.c.sem_timedwait else null;
		pub const sem_getvalue = if (@hasDecl(substitutes, "sem_getvalue")) substitutes.sem_getvalue else if (@hasDecl(std.c, "sem_getvalue")) std.c.sem_getvalue else null;
		pub const shm_open = if (@hasDecl(substitutes, "shm_open")) substitutes.shm_open else if (@hasDecl(std.c, "shm_open")) std.c.shm_open else null;
		pub const shm_unlink = if (@hasDecl(substitutes, "shm_unlink")) substitutes.shm_unlink else if (@hasDecl(std.c, "shm_unlink")) std.c.shm_unlink else null;
		pub const kqueue = if (@hasDecl(substitutes, "kqueue")) substitutes.kqueue else if (@hasDecl(std.c, "kqueue")) std.c.kqueue else null;
		pub const kevent = if (@hasDecl(substitutes, "kevent")) substitutes.kevent else if (@hasDecl(std.c, "kevent")) std.c.kevent else null;
		pub const port_create = if (@hasDecl(substitutes, "port_create")) substitutes.port_create else if (@hasDecl(std.c, "port_create")) std.c.port_create else null;
		pub const port_associate = if (@hasDecl(substitutes, "port_associate")) substitutes.port_associate else if (@hasDecl(std.c, "port_associate")) std.c.port_associate else null;
		pub const port_dissociate = if (@hasDecl(substitutes, "port_dissociate")) substitutes.port_dissociate else if (@hasDecl(std.c, "port_dissociate")) std.c.port_dissociate else null;
		pub const port_send = if (@hasDecl(substitutes, "port_send")) substitutes.port_send else if (@hasDecl(std.c, "port_send")) std.c.port_send else null;
		pub const port_sendn = if (@hasDecl(substitutes, "port_sendn")) substitutes.port_sendn else if (@hasDecl(std.c, "port_sendn")) std.c.port_sendn else null;
		pub const port_get = if (@hasDecl(substitutes, "port_get")) substitutes.port_get else if (@hasDecl(std.c, "port_get")) std.c.port_get else null;
		pub const port_getn = if (@hasDecl(substitutes, "port_getn")) substitutes.port_getn else if (@hasDecl(std.c, "port_getn")) std.c.port_getn else null;
		pub const port_alert = if (@hasDecl(substitutes, "port_alert")) substitutes.port_alert else if (@hasDecl(std.c, "port_alert")) std.c.port_alert else null;
		pub const getaddrinfo = if (@hasDecl(substitutes, "getaddrinfo")) substitutes.getaddrinfo else if (@hasDecl(std.c, "getaddrinfo")) std.c.getaddrinfo else null;
		pub const freeaddrinfo = if (@hasDecl(substitutes, "freeaddrinfo")) substitutes.freeaddrinfo else if (@hasDecl(std.c, "freeaddrinfo")) std.c.freeaddrinfo else null;
		pub const getnameinfo = if (@hasDecl(substitutes, "getnameinfo")) substitutes.getnameinfo else if (@hasDecl(std.c, "getnameinfo")) std.c.getnameinfo else null;
		pub const gai_strerror = if (@hasDecl(substitutes, "gai_strerror")) substitutes.gai_strerror else if (@hasDecl(std.c, "gai_strerror")) std.c.gai_strerror else null;
		pub const poll = if (@hasDecl(substitutes, "poll")) substitutes.poll else if (@hasDecl(std.c, "poll")) std.c.poll else null;
		pub const ppoll = if (@hasDecl(substitutes, "ppoll")) substitutes.ppoll else if (@hasDecl(std.c, "ppoll")) std.c.ppoll else null;
		pub const dn_expand = if (@hasDecl(substitutes, "dn_expand")) substitutes.dn_expand else if (@hasDecl(std.c, "dn_expand")) std.c.dn_expand else null;
		pub const PTHREAD_MUTEX_INITIALIZER = if (@hasDecl(substitutes, "PTHREAD_MUTEX_INITIALIZER")) substitutes.PTHREAD_MUTEX_INITIALIZER else if (@hasDecl(std.c, "PTHREAD_MUTEX_INITIALIZER")) std.c.PTHREAD_MUTEX_INITIALIZER else null;
		pub const pthread_mutex_lock = if (@hasDecl(substitutes, "pthread_mutex_lock")) substitutes.pthread_mutex_lock else if (@hasDecl(std.c, "pthread_mutex_lock")) std.c.pthread_mutex_lock else null;
		pub const pthread_mutex_unlock = if (@hasDecl(substitutes, "pthread_mutex_unlock")) substitutes.pthread_mutex_unlock else if (@hasDecl(std.c, "pthread_mutex_unlock")) std.c.pthread_mutex_unlock else null;
		pub const pthread_mutex_trylock = if (@hasDecl(substitutes, "pthread_mutex_trylock")) substitutes.pthread_mutex_trylock else if (@hasDecl(std.c, "pthread_mutex_trylock")) std.c.pthread_mutex_trylock else null;
		pub const pthread_mutex_destroy = if (@hasDecl(substitutes, "pthread_mutex_destroy")) substitutes.pthread_mutex_destroy else if (@hasDecl(std.c, "pthread_mutex_destroy")) std.c.pthread_mutex_destroy else null;
		pub const PTHREAD_COND_INITIALIZER = if (@hasDecl(substitutes, "PTHREAD_COND_INITIALIZER")) substitutes.PTHREAD_COND_INITIALIZER else if (@hasDecl(std.c, "PTHREAD_COND_INITIALIZER")) std.c.PTHREAD_COND_INITIALIZER else null;
		pub const pthread_cond_wait = if (@hasDecl(substitutes, "pthread_cond_wait")) substitutes.pthread_cond_wait else if (@hasDecl(std.c, "pthread_cond_wait")) std.c.pthread_cond_wait else null;
		pub const pthread_cond_timedwait = if (@hasDecl(substitutes, "pthread_cond_timedwait")) substitutes.pthread_cond_timedwait else if (@hasDecl(std.c, "pthread_cond_timedwait")) std.c.pthread_cond_timedwait else null;
		pub const pthread_cond_signal = if (@hasDecl(substitutes, "pthread_cond_signal")) substitutes.pthread_cond_signal else if (@hasDecl(std.c, "pthread_cond_signal")) std.c.pthread_cond_signal else null;
		pub const pthread_cond_broadcast = if (@hasDecl(substitutes, "pthread_cond_broadcast")) substitutes.pthread_cond_broadcast else if (@hasDecl(std.c, "pthread_cond_broadcast")) std.c.pthread_cond_broadcast else null;
		pub const pthread_cond_destroy = if (@hasDecl(substitutes, "pthread_cond_destroy")) substitutes.pthread_cond_destroy else if (@hasDecl(std.c, "pthread_cond_destroy")) std.c.pthread_cond_destroy else null;
		pub const pthread_rwlock_destroy = if (@hasDecl(substitutes, "pthread_rwlock_destroy")) substitutes.pthread_rwlock_destroy else if (@hasDecl(std.c, "pthread_rwlock_destroy")) std.c.pthread_rwlock_destroy else null;
		pub const pthread_rwlock_rdlock = if (@hasDecl(substitutes, "pthread_rwlock_rdlock")) substitutes.pthread_rwlock_rdlock else if (@hasDecl(std.c, "pthread_rwlock_rdlock")) std.c.pthread_rwlock_rdlock else null;
		pub const pthread_rwlock_wrlock = if (@hasDecl(substitutes, "pthread_rwlock_wrlock")) substitutes.pthread_rwlock_wrlock else if (@hasDecl(std.c, "pthread_rwlock_wrlock")) std.c.pthread_rwlock_wrlock else null;
		pub const pthread_rwlock_tryrdlock = if (@hasDecl(substitutes, "pthread_rwlock_tryrdlock")) substitutes.pthread_rwlock_tryrdlock else if (@hasDecl(std.c, "pthread_rwlock_tryrdlock")) std.c.pthread_rwlock_tryrdlock else null;
		pub const pthread_rwlock_trywrlock = if (@hasDecl(substitutes, "pthread_rwlock_trywrlock")) substitutes.pthread_rwlock_trywrlock else if (@hasDecl(std.c, "pthread_rwlock_trywrlock")) std.c.pthread_rwlock_trywrlock else null;
		pub const pthread_rwlock_unlock = if (@hasDecl(substitutes, "pthread_rwlock_unlock")) substitutes.pthread_rwlock_unlock else if (@hasDecl(std.c, "pthread_rwlock_unlock")) std.c.pthread_rwlock_unlock else null;
		pub const pthread_t = if (@hasDecl(substitutes, "pthread_t")) substitutes.pthread_t else if (@hasDecl(std.c, "pthread_t")) std.c.pthread_t else null;
		pub const FILE = if (@hasDecl(substitutes, "FILE")) substitutes.FILE else if (@hasDecl(std.c, "FILE")) std.c.FILE else null;
		pub const dlopen = if (@hasDecl(substitutes, "dlopen")) substitutes.dlopen else if (@hasDecl(std.c, "dlopen")) std.c.dlopen else null;
		pub const dlclose = if (@hasDecl(substitutes, "dlclose")) substitutes.dlclose else if (@hasDecl(std.c, "dlclose")) std.c.dlclose else null;
		pub const dlsym = if (@hasDecl(substitutes, "dlsym")) substitutes.dlsym else if (@hasDecl(std.c, "dlsym")) std.c.dlsym else null;
		pub const sync = if (@hasDecl(substitutes, "sync")) substitutes.sync else if (@hasDecl(std.c, "sync")) std.c.sync else null;
		pub const syncfs = if (@hasDecl(substitutes, "syncfs")) substitutes.syncfs else if (@hasDecl(std.c, "syncfs")) std.c.syncfs else null;
		pub const fsync = if (@hasDecl(substitutes, "fsync")) substitutes.fsync else if (@hasDecl(std.c, "fsync")) std.c.fsync else null;
		pub const fdatasync = if (@hasDecl(substitutes, "fdatasync")) substitutes.fdatasync else if (@hasDecl(std.c, "fdatasync")) std.c.fdatasync else null;
		pub const prctl = if (@hasDecl(substitutes, "prctl")) substitutes.prctl else if (@hasDecl(std.c, "prctl")) std.c.prctl else null;
		pub const getrlimit = if (@hasDecl(substitutes, "getrlimit")) substitutes.getrlimit else if (@hasDecl(std.c, "getrlimit")) std.c.getrlimit else null;
		pub const setrlimit = if (@hasDecl(substitutes, "setrlimit")) substitutes.setrlimit else if (@hasDecl(std.c, "setrlimit")) std.c.setrlimit else null;
		pub const fmemopen = if (@hasDecl(substitutes, "fmemopen")) substitutes.fmemopen else if (@hasDecl(std.c, "fmemopen")) std.c.fmemopen else null;
		pub const syslog = if (@hasDecl(substitutes, "syslog")) substitutes.syslog else if (@hasDecl(std.c, "syslog")) std.c.syslog else null;
		pub const openlog = if (@hasDecl(substitutes, "openlog")) substitutes.openlog else if (@hasDecl(std.c, "openlog")) std.c.openlog else null;
		pub const closelog = if (@hasDecl(substitutes, "closelog")) substitutes.closelog else if (@hasDecl(std.c, "closelog")) std.c.closelog else null;
		pub const setlogmask = if (@hasDecl(substitutes, "setlogmask")) substitutes.setlogmask else if (@hasDecl(std.c, "setlogmask")) std.c.setlogmask else null;
		pub const if_nametoindex = if (@hasDecl(substitutes, "if_nametoindex")) substitutes.if_nametoindex else if (@hasDecl(std.c, "if_nametoindex")) std.c.if_nametoindex else null;
		pub const getcontext = if (@hasDecl(substitutes, "getcontext")) substitutes.getcontext else if (@hasDecl(std.c, "getcontext")) std.c.getcontext else null;
		pub const max_align_t = if (@hasDecl(substitutes, "max_align_t")) substitutes.max_align_t else if (@hasDecl(std.c, "max_align_t")) std.c.max_align_t else null;
	};
}
