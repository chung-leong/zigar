let e;function t({executable:e,memory:t,options:a,tid:s,arg:o}){const r=WebAssembly,i={memory:t},c={},l={},u={env:i,wasi:c,wasi_snapshot_preview1:l};for(const{module:t,name:a,kind:s}of r.Module.imports(e))if("function"===s){const e=n(t,a);"env"===t?i[a]=e:"wasi_snapshot_preview1"===t?l[a]=e:"wasi"===t&&(c[a]=e)}const{tableInitial:f}=a;i.__indirect_function_table=new r.Table({initial:f,element:"anyfunc"});const{exports:m}=new r.Instance(e,u),{wasi_thread_start:w}=m;w(s,o)}function n(t,n){if("_queueJsCall"===n)return function(...a){return e({type:"call",module:t,name:n,args:a}),0};{const a=new Int32Array(new SharedArrayBuffer(8));return function(...s){return a[0]=0,e({type:"call",module:t,name:n,args:s,array:a}),Atomics.wait(a,0,0),a[1]}}}(async()=>{if("object"==typeof self)onmessage=e=>t(e.data),e=e=>self.postMessage(e);else{const{parentPort:n,workerData:a}=await import("worker_threads");e=e=>n.postMessage(e),t(a)}})();
